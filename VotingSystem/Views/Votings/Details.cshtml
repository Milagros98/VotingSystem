@model VotingSystem.Models.DetailsVotingView

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Voting</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.State.description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State.description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.remarks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.remarks)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.dateTimeStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.dateTimeStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.dateTimeEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.dateTimeEnd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.isForAllUsers)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.isForAllUsers)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.isEnabledBlankVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.isEnabledBlankVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.quantityVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.quantityVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.quantityBlankVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.quantityBlankVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.candidateWinId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.candidateWinId)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.votingId }, new { @class = "btn btn-warning" })
    @if (!Model.isForAllUsers)
    {
        @Html.ActionLink("Add Group", "AddGroup", new { id = Model.votingId }, new { @class = "btn btn-default" })
    }
    @Html.ActionLink("Add Candidate", "AddCandidate", new { id = Model.votingId }, new { @class = "btn btn-default" })
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-primary" })
</p>

<div class="row">
    <div class="col-md-6">
        <section id="groups">
            @if (Model.VotingGroups.Count == 0)
            {
                <h3>There's not groups in this voting</h3>
            }
            else
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => Model.VotingGroups[0].group.description)
                        </th>
                 

                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.VotingGroups.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => Model.VotingGroups[i].group.description)
                            </td>
                            <td>
                                @Html.ActionLink("Delete", "DeleteVotingGroup", new { id = Model.VotingGroups[i].votingGroupId }, new { @class = "btn btn-danger", onclick = "return confirm('Are you sure to delete this group from this voting?')" })
                            </td>
                        </tr>
                    }

                </table>
            }

        </section>

    </div>
    <div class="col-md-6">
        <section id="candidates">
            @if (Model.Candidates.Count == 0)
            {
                <h3>There's not candidates in this voting</h3>
            }
            else
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.userName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.fullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.photo)
                        </th>

                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.Candidates.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => Model.Candidates[i].User.userName)
                            </td>
                            <td>
                                @Html.DisplayFor(mmodel => Model.Candidates[i].User.fullName)
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(Model.Candidates[i].User.photo))
                                {
                                    <img src="@Url.Content(Model.Candidates[i].User.photo)" alt="Image" style="height:100px; width:100px; max-width:100%; max-height: auto;"><img />
                                }
                            </td>

                            <td>
                                @Html.ActionLink("Delete", "DeleteCandidate", new { id = Model.Candidates[i].candidateId }, new { @class = "btn btn-danger", onclick = "return confirm('Are you sure to delete this candidate?')" })
                            </td>
                        </tr>
                    }

                </table>
            }
        </section>

    </div>
</div>
